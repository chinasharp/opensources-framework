#日志目录
opensourceframework.log.workdir: ../../logs
opensourceframework.env.logger.level:
opensourceframework.env.module:

nacos.services.group: ${opensourceframework.services.group}
nacos.configs.group: ${opensourceframework.env.module}

dubbo.service.group: ${opensourceframework.env.module}
dubbo.service.version: 1.0.0

server.port: ${opensourceframework.server.port}

spring:
  profiles:
    active: ${opensourceframework.profiles.active}
  application:
    name: ${opensourceframework.env.module}
  aop:
    proxy-target-class: true
  main:
    allow-bean-definition-overriding: true

  #服务注册中心与配置中心配置
  cloud:
    nacos:
      username: ${nacos.server.username}
      password: ${nacos.server.password}
      discovery:
        enabled: true
        register-enabled: true
        server-addr: ${nacos.server.address}
        group: ${nacos.services.group}
        namespace: ${nacos.server.namespace}
      config:
        server-addr: ${nacos.server.address}
        group: ${nacos.configs.group}
        namespace: ${nacos.server.namespace}
        shared-data-ids: ${nacos.config.dataIds}
        refreshable-dataids: ${nacos.config.dataIds}

dubbo:
  cloud:
    # The subscribed services in consumer side
    subscribed-services: ${opensourceframework.subscribed.services}
  protocols:
    dubbo:
      name: dubbo
      port: -1
      threads: 250
  consumer:
    check: false
  registry:
    address: spring-cloud://localhost

ribbon:
  nacos:
    enabled: true


# 实际使用中配置nacos中
#方便代码中声明生产者服务名引用 多个前缀为provider.xxxx.service.
#示例代码
#在org.opensourceframework.application.user.biz.init。DemoController 中对Dubbo服务的声明：
#    @Reference(group = "${provider.user.service.group}" , version = "${provider.user.service.version}" , protocol = "${provider.user.service.protocol}")
#    private IUserDemoApi demoUserApi;
#在org.opensourceframework.application.user.biz.feignclients.feignservice.DemoFeignService 中RestFull服务名的声明
#    @FeignClient(name="${provider.user.service.group}" , path = "/v1/demouser")
#    public interface DemoFeignService{
#    }

#provider.xxxx.service.group: opensources-xxxx-center
#provider.xxxx.service.version: opensources-xxxx-center
#provider.xxxx.service.protocol: dubbo
